# -*- coding: utf-8 -*-
"""Semana 07-01

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HrPv8unX5wKxWs4sohNZf_9y_AlUEYU8

#Semana 07 - NUMEROS Y VARIABLES
#Omar Vargas Rodriguez
"""

#Tema
#1. Numeros
#2. Variables
#3. Manejo de cadenas
#4. Ingreso de datos por el teclado
#5. Operadores

edad = 27
edad

nombre= "Omar"
nombre

apellido= "Vargas Rodriguez"
apellido

nombrecompleto= nombre + apellido
nombrecompleto

nombrecompleto= nombre + " " + apellido
nombrecompleto

#Para saber el tipo de variable utilizamos la funcion type()
#Por ejemplo:
numero = 50
type(numero)

type(nombre)

talla = 1.57
talla

type(talla)

#Para convertir un numero en cadena utilizamos str()
numero = 100
cadena = str(numero)
cadena

type(cadena)

#Para convertir una cadena en un entero utilizamos int()
cadena2= "50"
numero2= int(cadena2)
numero2

type(numero2)

#Para convertir una cadena a un decimal utilizamos float()
cadena2="50"
numero2=float(cadena2)
numero2

type(numero2)

"""#Semana 07 - Manejo de cadenas
#Omar Vargas Rodriguez
"""

#Tema
#1. Numeros
#2. Variables
#3. Manejo de cadenas
#4. Ingreso de datos por el teclado
#5. Operadores

cadena = "Universidad Nacional Tecnologica de Lima Sur"
cadena

#Universidad Nacional Tecnologica de Lima Sur
#01234........
#

cadena [5]

cadena [10]

#Tambien considera los espacios+
cadena[11]

#Que mostrará?
cadena [-5]

cadena [21]

#Tambien lo puedo mostrar accediendo de manera inversa
cadena[-23]

#Para mostrar una subcadena [desde, hasta una antes]
#En java era substring()
cadena [3:8]

#Para saber el tamaño de una cadena utilizamos len()
#incluye espacion en blanco
len(cadena)

#Para convertir todo a mayuscula utilizamos upper()
cadena.upper()

#Ojo... solo lo muestra porque el original sigue siendo en minusculas
cadena

#Para mostrar una cadena en minuscula utilizamos lower()
cadena.lower()

#Generar una lista a partir de una cadena. split()
cadena.split()

#Genera una lista utilizando un criterio de separacion a partir de una cadena. split()
#En este caso vamos a generar una lista de toda la cadena,
#utilizando como criterio de separacion la letra "A"
cadena.split("a")

#Forma clasica de concatenar con +
nombre= "Omar Vargas"
print("Buenas tardes " + nombre)

#Utilizando el -formart()
nombre = "Omar Vargas"
edad = 27
print ("Hola {}, ya se que tienes {} años".format(nombre,edad))

#Dar formato a numeros con muchos decimales
resultado = 10/3
print ("10/3 es = {}".format(resultado))
print ("10/3 es = {r:1.3f} ".format(r=resultado))



"""#Semana 07 - Ingreso de datos por el teclado
#Omar Vargas Rodriguez
"""

#Tema
#1. Numeros
#2. Variables
#3. Manejo de cadenas
#4. Ingreso de datos por el teclado
#5. Operadores

#Funcion input
print("¿Cual es tu nombre?")
nombre = input()
print ("hola " + nombre)

#Cuando ingresa un valor por teclado lo hace como cadena
print("numero 1: ")
numero1=input()
print("numero 2: ")
numero2= input()
numero3= int(numero1)+ int(numero2)
print(f"El resultado es {numero3}")

"""#Semana 07 - Operadores
#Omar Vargas Rodriguez
"""

#Tema
#1. Numeros
#2. Variables
#3. Manejo de cadenas
#4. Ingreso de datos por el teclado
#5. Operadores

numero1 = 10
numero2 = 3
suma = numero1 + numero2
resta = numero1 - numero2
multiplicacion = numero1 * numero2
division = numero1 / numero2
residuo = numero1 % numero2
cociente = numero1 // numero2
potencia = numero1 ** numero2
print(suma)
print(resta)
print(multiplicacion)
print(division)
print(residuo)
print(cociente)
print(potencia)

#OPERADORES DE ASIGNACION 
#SE TIENE: =, +=, -=,*=,/=**=
numero = 5
numero= numero + 3
print (numero)

#La operacion anterior tambien se puede expresar de la sigiente manera:
numero = 5
numero += 3
print(numero)

#Lo mismo para potencia
numero = 5
numero = numero ** 3
print (numero)

#Tambien se puede hacer de la siguiente manera
numero = 5
numero **=3
print (numero)

#Ejmplo de ingualdad
numero1= 5
numero2 = 2
numero1 == numero2

#con las cadenas funciona igual
nombre1= "Juan"
nombre2= "Juan"
nombre1 == nombre2

#Se tiene AND, OR, NOT
numero1= 5
numero2= 6
numero3= 7
numero4= 8

numero1 < numero2

not(numero1<numero2)

numero1<numero2 and numero3<numero4

#Tambien utilizar parentesis para ordenar la operacion
(numero1<numero2 and numero3<numero4) or (numero3>numero4)

#Operadores de pertenencia
#in, not in

aula=["Omar","Daniel","Juan"]
alumno1 = "Abel"
alumno2 = "Juan"

alumno1 in aula

alumno2 in aula

alumno1 not in aula

alumno2 not in aula

#Operadores de identidad
#Se tiene: is, is not

aula1=["Juan","Daniel","Ruben"]
aula2=["Juan","Daniel","Ruben"]
#Acontinuacion vamos a indicar que aula3 va a
#compartir el mismo objeto que aula1
aula3 = aula1

aula3 is aula1

aula3 is aula2

aula2 is aula1

#Para añadir elemento .append("###")
aula1.append("Diego")

print(aula1)

print(aula3)

print(aula2)

